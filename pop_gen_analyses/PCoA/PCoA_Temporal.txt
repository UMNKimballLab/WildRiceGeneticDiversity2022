# Need to create SNP tables in R narrowed to just Garfield and Shell lake new and old samples, working in R on agate server
module load R/4.1.0
R
library(tidyverse)
library(glue)

samp<-read.csv("~/Genetic_Diversity/Full_Sample_Key_240122.csv", )

#Narrowing to temporal data
keep<-c("Garfield Lake", "GarfieldLakeOld","Shell Lake","ShellLakeOld")
Temp<-samp[(samp$Sample_ID_extended %in% keep),]

names<-Temp$Sample_number

#Matching sample names to those in vcf file to use for splitting them
#Use this to see how samples are named in vcf (just in linux outside of R)
bcftools query -l biallelic_snps_only.recode.vcf

names2<-glue("{names}/{names}_sorted.bam")

#make text files with doubled sample name columns to use in plink as keep files
Tempdat<-data.frame(names2)
Tempdat2<-cbind(Tempdat, Tempdat[,1])
write.table(Tempdat2, file ="Tempnames.txt", row.names=FALSE, quote=FALSE, col.names=FALSE)


save(Temp, names2, Tempdat, Tempdat2 ,file="/home/jkimball/garbe047/Genetic_Diversity/filtering_temporal_231003.Rdata")

#Exit R and use plink in linux system

module load plink
#Convert vcf to bfile, which is a .bim, .bed, and .fam set of filessaves to  to_subset
#to_subset was created previously when separating by class in LDdecay.txt
plink --double-id --vcf biallelic_snps_only.recode.vcf --mind 0.95 --recode --make-bed --allow-extra-chr --out to_subset

#Subset bfile based on class txt files made above
plink --file to_subset --double-id --keep Tempnames.txt --recode --allow-extra-chr  --out Temporal

#Convert back to vcf
plink --file Temporal --make-bed --mind 0.95 --allow-extra-chr --out Temporal_binary
plink --bfile Temporal_binary --recode vcf  --mind 0.95 --allow-extra-chr --out Temporal

#Back to R to use vcf file to get snp count table
#Using temporal vcf file just created
#open R/4.1.0
library(vcfR)    
library(vegan)
library(stats)
library(tidyverse)
library(ggplot2)
library(ggpubr)

vcf<-read.vcfR("~/Genetic_Diversity/Temporal.vcf", convertNA =TRUE)

#Extract numeric genotype data and convert to matrix
vcf_num<-extract.gt(vcf, element = "GT", IDtoRowNames  = F, as.numeric = T, convertNA = T, return.alleles = F)

#transpose so snps are columns
vcf_num_t <- t(vcf_num)
#back to data frame for easier manipulation
vcf_num_df <- data.frame(vcf_num_t) 

#read in sample file from before, Temp is the narrowed sample file 
load("/home/jkimball/garbe047/Genetic_Diversity/filtering_temporal_231003.Rdata")

#make sure both sample data and snp table have sample column and that the sample names are the same
sample_data<-Temp %>% rename("sample" ="sample_number")
row.names(vcf_num_df)<-gsub("/.*", "", rownames(vcf_num_df))
sample <- row.names(vcf_num_df)
vcf_sample_df <- data.frame(sample, vcf_num_df)
vcf_num_df2 <- merge(sample_data, vcf_sample_df, by = "sample")
row.names(vcf_num_df2)<-vcf_num_df2$sample

#Convert to matrix to input into vegdist() from vegan package
drop<-c("ID","sample_ID_simplified","sample_ID_extended", "class","sample")
vcf_num_df3<-vcf_num_df2[,!(names(vcf_num_df2) %in% drop)]
vcfmat<-as.matrix(sapply(vcf_num_df3, as.numeric))
row.names(vcfmat)<-row.names(vcf_num_df3)

#making dissimilarity matrix, using pairwise deletion of missing values (na.rm=T)
dist<-vegdist(vcfmat, method="jaccard",na.rm=TRUE)

#Running PcoA with cmdscale(), eig=T returns eigen values and add=T adds a constant so we don't have negative values.
pcoa <- cmdscale(dist, eig=TRUE, add=TRUE,k=4)

save(vcf, vcf_num, vcf_num_t, vcf_num_df,sample_data,vcf_sample_df, vcf_num_df2, vcf_num_df3,vcfmat,dist,pcoa,file="~/Genetic_Diversity/231003_Temporal_PCOAdat.Rdata")

