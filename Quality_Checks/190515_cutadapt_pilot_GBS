# 15 May 2019
# This code is the beginning of the GBS pipeline for wild rice

# Make a list of directories in the present working directory (/home/jkimball/haasx092/pilot_GBS)
# Note: this makes a list of everything so for our purposes benefits from the fact that the only contents of pilot_GBS are directories.
ls * -d | tr -d / > 190515_sample_list

cat 190515_sample_list

# Load cutadapt
module load cutadapt

# This worked, so I had to find out why  it wasn't working with variables
cutadapt -a CTGTCTCT GarfieldLake_p_S243/GarfieldLake_p_S243_R1_001.fastq.gz -o GarfieldLake_p_S243/GarfieldLake_p_S243_R1_001_trimmed.fastq.gz

# This appears to work by iterating over each line within the text file 190515_sample_list
for i in $(cat 190515_sample_list); do
cutadapt -a CTGTCTCT $i/${i}_R1_001.fastq.gz -o $i/${i}_R1_001_trimmed.fastq.gz;
done

# Load fastQC
module load fastqc

# Run fastQC on trimmed reads
for i in $(cat 190515_sample_list); do
fastqc $i/${i}_R1_001_trimmed.fastq.gz;
done

# Use BWA to align fastq reads to the reference genome
# Load BWA
module load bwa

# Assign a short name to the reference so the script calling BWA is easier to read
FASTA='/home/jkimball/mshao/genome_seq/zizania_palustris_13Nov2018_okGsv.fasta.gz'

# Index the genome
bwa index $FASTA
# Align one sample to the genome as a test before generalizing it so it will do all files.
# Run bwa mem algorithm in the directory where the g-zipped fastq files are. It isn't working from the directory "~/pilot_GBS".
# The generalized script should therefore feature a way to change directories into each sample's subdirectory.
bwa mem $FASTA 14S-PS_p_S239_R1_001_trimmed.fastq.gz > 14S-PS_p_S239.sam 2> 14-PS_p_S239_bwa.err

# Create a sorted BAM file
module load samtools
samtools sort 14S-PS_p_S239.sam -o 14S-PS_p_S239_sorted.bam 2> 14-PS_p_S239_samtools_sort.err

# Skip the intermediate file step and send the oupt of bwa mem directly to samtools for sorting
module load bwa
module load samtools 

FASTA='/home/jkimball/mshao/genome_seq/zizania_palustris_13Nov2018_okGsv.fasta.gz'
bwa index $FASTA 2> FY-C20_p_S238_bwa_index.err \
bwa mem $FASTA FY-C20_p_S238_R1_001_trimmed.fastq.gz  2> FY-C20_p_S238_bwa.err | samtools sort -o FY-C20_p_S23_sorted.bam 2> FY-C20_p_S23_samtools_sort.err


# The following code can and should be done in a script and sent to the job queue. It is likely to take ~16 hours (for 8 samples..)
# This code allows for simultaneous alignment of reads with bwa and piping to samtools for sorting so that the end result is a sorted BAM file.
# Load software outside of loop--it only needs to be done once
module load bwa
module load samtools 

# Likewise, this step only needs to be done once.
FASTA='/home/jkimball/mshao/genome_seq/zizania_palustris_13Nov2018_okGsv.fasta.gz'

# BWA and SAMtools
cat 190515_sample_list | while read i; do
bwa mem $FASTA $i/${i}_R1_001_trimmed.fastq.gz 2> $i/${i}_bwa.err | samtools sort -o $i/${i}_sorted.bam 2> $i/${i}_samtools_sort.err;
done

# Make a list of bam files for use in SNP calling
ls */*bam > bam_list

# Start here for  SNP calling portion

module load samtools
module load bcftools
module load htslib
module load parallel

bams='/home/jkimball/haasx092/pilot_GBS/bam_list'
prefix="190607_samtools"
parallel_samtools_processes=10
ref="/home/jkimball/mshao/genome_seq/zizania_palustris_13Nov2018_okGsv.fasta"

mkdir -p $prefix
cut -f 1 ${ref}.fai \
 | parallel --will-cite -I'{}' -j $parallel_samtools_processes \
  \(samtools mpileup -q 20 -gDVu \
  -b $bams \
  -r '{}' \
  -f ${ref} \
  \| bcftools call -mv \
  \| bgzip -c \
  \> $prefix/${prefix}_'{}'.vcf.gz \) \
  2\> $prefix/${prefix}_'{}'.err

# Variant calling
# "awk -f" before ./normalize.awk was necessary to get script to run
# Original script had results writing to $tmp rather than tmp, but that results in error message: "-bash: $tmp: ambiguous redirect"
# Initial run did not result in any output except for the headers.. maybe that was the result of configuration file parameters?

# This was done inside the samtools directory
normalize_prefix="190627_normalize"
mktemp | read tmp
zcat ${prefix}_*.vcf.gz | awk -f ./normalize.awk > '$tmp' 2> $normalize_prefix.err

# Copy the results of SNP calling in a temporary file to a TSV file for further processing
# Retaining the temporary file for now in case I want to do something else with it in the immediate future
cp '$tmp' 190607_normalize.tsv # Can further process/filter the TSV file in R.
